class ConvoScript{constructor({resultElementSelector:e,api_token:t,loadingElementSelector:r,inputElementSelector:o,acceptButtonElementSelector:n,delayTime:a=100}){if([e,t,r,o,n].some((e=>null==e)))throw new Error(`Not all required parameters provided: api_token: ${t}, resultElementSelector: ${e}, loadingElementSelector: ${r}, inputElementSelector: ${o}, acceptButtonElementSelector: ${n}`);this.arrays={},this.resultElementSelector=e,this.api_token=t,this.loadingElementSelector=r,this.inputElementSelector=o,this.acceptButtonElementSelector=n,this.delayTime=a}addScript(e,t){if(t=JSON.parse(JSON.stringify(t)),this.arrays[e])throw new Error(`Script with name "${e}" already exists.`);if("end"===e?.toLowerCase())throw new Error(`Illegal script name provided: ${e}`);const r=new Proxy(t,{get:(e,t)=>{const r=Reflect.get(e,t);return"string"==typeof r&&r.startsWith("${")&&r.endsWith("}")?this.evaluateExpression(r.slice(2,-1)):"object"==typeof r&&null!==r?this.resolveNestedReferences(r):r},set:(e,t,r)=>Reflect.set(e,t,r)});return this.arrays[e]=r,r}removeScript(e){if(!this.arrays[e])throw new Error(`Script with name "${e}" does not exist.`);delete this.arrays[e]}evaluateExpression(e){try{return new Function("arrays",`return ${e}`)(this.arrays)}catch(t){return console.error(`Failed to evaluate expression: ${e}`,t),e}}resolveNestedReferences(e){if(Array.isArray(e))return e.map((e=>this.resolveNestedReferences(e)));if("object"==typeof e&&null!==e){const t={};for(const r of Object.keys(e)){const o=e[r];"string"==typeof o&&o.startsWith("${")&&o.endsWith("}")?t[r]=this.evaluateExpression(o.slice(2,-1)):t[r]=this.resolveNestedReferences(o)}return t}return"string"==typeof e&&e.startsWith("${")&&e.endsWith("}")&&(e=this.evaluateExpression(e.slice(2,-1))),e}getScript(e){return this.arrays[e]}getScriptName(e){for(const[t,r]of Object.entries(this.arrays))if(r===e)return t;throw new Error("Script not found")}async run(array){let manager=this;"string"==typeof array&&(array=manager.getScript(array));const hashtable={textToText:foundry.textToText,textToImage:foundry.textToImage,textToSound:foundry.textToSound,soundToText:foundry.soundToText,transcribeRecording:foundry.transcribeRecording,transcribeFile:foundry.transcribeFile,stopRec:foundry.stopRec,imageToText:foundry.imageToText,fileSelector:foundry.fileSelector,models:foundry.models};let latestImage,latestSound,latestMessage;for(let i=0;i<array.length;i++){if("function"===array[i]?.role?.toLowerCase())if("fileSelector"===array[i]?.content){let e=await hashtable[array[i].content](array[i].fileType);"sound"===array[i].fileType?.toLowerCase()||"audio"===array[i].fileType?.toLowerCase()?latestSound=e:"image"===array[i].fileTYpe?.toLowerCase()&&(latestImage=e)}else{document.querySelector(this.loadingElementSelector).removeAttribute("hidden");let e=await hashtable[array[i].content]({api_token:this.api_token,image:latestImage,file:latestSound,prompt:latestMessage,logging:!1,...array[i]});document.querySelector(this.loadingElementSelector).setAttribute("hidden",""),array[i]={...array[i],response:e},"textToImage"===array[i].content?(latestImage=e,document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>Assistant: </p><img src="${e}" />`)):"textToSound"===array[i].content?(latestSound=e,document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>Assistant: </p><audio controls src="${e}" />`)):"fileSelector"===array[i].content?document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend","<p>User: File Selected</p>"):(latestMessage=e,document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>Assistant: ${e}</p>`))}else if("condition"===array[i].role?.toLowerCase())try{if(eval(array[i].content)){if("end"===array[i].true?.toLowerCase())break;await this.run(array[i].true);break}if("end"===array[i].false?.toLowerCase())break;await this.run(array[i].false);break}catch(e){console.error("An issue occurred in your condition",e,"condition: ",array[i].content);try{if(array[i].content){if("end"===array[i].true?.toLowerCase())break;await this.run(array[i].true);break}if("end"===array[i].false?.toLowerCase())break;await this.run(array[i].false);break}catch(e){console.error("An issue occurred in your condition");try{if("end"===array[i].false?.toLowerCase())break;await this.run(array[i].false);break}catch(e){console.error("An issue occurred in your condition");break}}}else if("input"===array[i].content?.content?.toString?.().toLowerCase?.()){let e=await this.waitForUserInput(array[i].content?.type);"text"!==array[i].content?.type?.toLowerCase()&&"transcription"!==array[i].content?.type?.toLowerCase()||(latestMessage=e,document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>${this.addCap(array[i].role)}: ${e}</p>`),array[i]={...array[i],content:e}),"image"===array[i].content?.type?.toLowerCase()&&(latestImage=e,document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>${this.addCap(array[i].role)}:</p><img src="${e}" />`)),"sound"!==array[i].content?.type?.toLowerCase()&&"audio"!==array[i].content?.type?.toLowerCase()||(latestSound=e,document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>${this.addCap(array[i].role)}:</p><audio controls src="${e}" />`)),array[i]={...array[i],content:e}}else if("code"===array[i].role?.toLowerCase())try{eval(array[i].content)}catch(e){console.error("There is a problem with the content of your code-message:",e)}else document.querySelector(this.resultElementSelector).insertAdjacentHTML("beforeend",`<p>${this.addCap(array[i].role)}: ${array[i].content}</p>`),latestMessage=array[i].content;await delay(this.delayTime),window.scrollTo(0,document.body.scrollHeight)}return manager.arrays;function delay(e){return new Promise((t=>setTimeout(t,e)))}}waitForUserInput(e){return new Promise((t=>{"text"===e?.toLowerCase()?(document.querySelector(this.inputElementSelector).setAttribute("type",e),document.querySelector(this.acceptButtonElementSelector).removeAttribute("hidden"),document.querySelector(this.acceptButtonElementSelector).onclick=()=>{t(document.querySelector(this.inputElementSelector).value),document.querySelector(this.acceptButtonElementSelector).setAttribute("hidden",""),document.querySelector(this.inputElementSelector).setAttribute("type","hidden"),document.querySelector(this.inputElementSelector).value=""}):"image"===e?.toLowerCase()||"audio"===e?.toLowerCase()||"sound"===e?.toLowerCase()?(document.querySelector(this.acceptButtonElementSelector).removeAttribute("hidden"),document.querySelector(this.acceptButtonElementSelector).innerHTML="Upload",document.querySelector(this.acceptButtonElementSelector).onclick=async()=>{let r=await foundry.fileSelector(e);if("image"!==e?.toLowerCase())try{r=this.processAudioFile(r)}catch(e){console.error(e)}t(r),document.querySelector(this.acceptButtonElementSelector).setAttribute("hidden","")}):"transcription"===e?.toLowerCase()&&(this.initializeMicrophone(),document.querySelector(this.acceptButtonElementSelector).removeAttribute("hidden"),document.querySelector(this.acceptButtonElementSelector).innerHTML="Hold to record",document.querySelector(this.acceptButtonElementSelector).ontouchstart=async()=>{foundry.transcribeRecording({api_token:api_token})},document.querySelector(this.acceptButtonElementSelector).onmousedown=async()=>{foundry.transcribeRecording({api_token:api_token})},document.querySelector(this.acceptButtonElementSelector).ontouchend=async()=>{let e=await foundry.stopRec({api_token:api_token});t(e),document.querySelector(this.acceptButtonElementSelector).setAttribute("hidden","")},document.querySelector(this.acceptButtonElementSelector).onmouseup=async()=>{let e=await foundry.stopRec({api_token:api_token});t(e),document.querySelector(this.acceptButtonElementSelector).setAttribute("hidden","")})}))}addCap(e){return e.charAt(0).toUpperCase()+e.slice(1)}initializeMicrophone(e=!1){if("undefined"!=typeof RecordRTC)e&&console.log("RecordRTC is already loaded.");else{e&&console.log("RecordRTC is not loaded, adding script to the page.");var t=document.createElement("script");t.src="https://cdn.webrtc-experiment.com/RecordRTC.js",t.async=!0,t.onload=function(){e&&console.log("RecordRTC has been loaded.")},document.head.appendChild(t)}navigator.mediaDevices.getUserMedia({audio:!0})}processAudioFile(e){return new Promise(((t,r)=>{const o=new FileReader;o.onload=function(e){t(e.target.result)},o.onerror=function(e){r("Error reading file")},o.readAsDataURL(e)}))}}